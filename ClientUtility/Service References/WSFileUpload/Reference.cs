//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientUtility.WSFileUpload {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSFileUpload.IUrbanWater_FileUpload")]
    public interface IUrbanWater_FileUpload {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUrbanWater_FileUpload/DoWork", ReplyAction="http://tempuri.org/IUrbanWater_FileUpload/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUrbanWater_FileUpload/DoWork", ReplyAction="http://tempuri.org/IUrbanWater_FileUpload/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        // CODEGEN: Generating message contract since the operation UploadFile is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUrbanWater_FileUpload/UploadFile", ReplyAction="http://tempuri.org/IUrbanWater_FileUpload/UploadFileResponse")]
        ClientUtility.WSFileUpload.UploadFileResponse UploadFile(ClientUtility.WSFileUpload.RemoteFileInfo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUrbanWater_FileUpload/UploadFile", ReplyAction="http://tempuri.org/IUrbanWater_FileUpload/UploadFileResponse")]
        System.Threading.Tasks.Task<ClientUtility.WSFileUpload.UploadFileResponse> UploadFileAsync(ClientUtility.WSFileUpload.RemoteFileInfo request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoteFileInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RemoteFileInfo {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long Length;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public RemoteFileInfo() {
        }
        
        public RemoteFileInfo(string FileName, long Length, string Type, System.IO.Stream FileByteStream) {
            this.FileName = FileName;
            this.Length = Length;
            this.Type = Type;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadFileResponse {
        
        public UploadFileResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUrbanWater_FileUploadChannel : ClientUtility.WSFileUpload.IUrbanWater_FileUpload, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UrbanWater_FileUploadClient : System.ServiceModel.ClientBase<ClientUtility.WSFileUpload.IUrbanWater_FileUpload>, ClientUtility.WSFileUpload.IUrbanWater_FileUpload {
        
        public UrbanWater_FileUploadClient() {
        }
        
        public UrbanWater_FileUploadClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UrbanWater_FileUploadClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UrbanWater_FileUploadClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UrbanWater_FileUploadClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ClientUtility.WSFileUpload.UploadFileResponse ClientUtility.WSFileUpload.IUrbanWater_FileUpload.UploadFile(ClientUtility.WSFileUpload.RemoteFileInfo request) {
            return base.Channel.UploadFile(request);
        }
        
        public void UploadFile(string FileName, long Length, string Type, System.IO.Stream FileByteStream) {
            ClientUtility.WSFileUpload.RemoteFileInfo inValue = new ClientUtility.WSFileUpload.RemoteFileInfo();
            inValue.FileName = FileName;
            inValue.Length = Length;
            inValue.Type = Type;
            inValue.FileByteStream = FileByteStream;
            ClientUtility.WSFileUpload.UploadFileResponse retVal = ((ClientUtility.WSFileUpload.IUrbanWater_FileUpload)(this)).UploadFile(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ClientUtility.WSFileUpload.UploadFileResponse> ClientUtility.WSFileUpload.IUrbanWater_FileUpload.UploadFileAsync(ClientUtility.WSFileUpload.RemoteFileInfo request) {
            return base.Channel.UploadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ClientUtility.WSFileUpload.UploadFileResponse> UploadFileAsync(string FileName, long Length, string Type, System.IO.Stream FileByteStream) {
            ClientUtility.WSFileUpload.RemoteFileInfo inValue = new ClientUtility.WSFileUpload.RemoteFileInfo();
            inValue.FileName = FileName;
            inValue.Length = Length;
            inValue.Type = Type;
            inValue.FileByteStream = FileByteStream;
            return ((ClientUtility.WSFileUpload.IUrbanWater_FileUpload)(this)).UploadFileAsync(inValue);
        }
    }
}
